#  Copyright 1999 by Donn Cave, Seattle, Washington, USA.
#  All rights reserved.  Permission to copy, modify and distribute this
#  material is hereby granted, without fee, provided that the above
#  copyright notice appear in all copies.

include
	<interface/Alert.h>

class Alert looper
	base Window
	constructor
		param const char*@1,const char*@2,const char*@3,const char*@4,const char*@5,button_width@6,alert_type@7
		param const char*@1,const char*@2,const char*@3,const char*@4,const char*@5,button_width@6,button_spacing@7,alert_type@8
	function BAlert
		input char*@1,char*@2,char*@3,char*@4=0,char*@5=0,button_width@6=B_WIDTH_AS_USUAL,alert_type@7=B_INFO_ALERT
		return BAlert*%0
		input char*@1,char*@2,char*@3,char*@4,char*@5,button_width@6,button_spacing@7,alert_type@8=B_INFO_ALERT
	function SetShortcut
		input int32@1,char@2
	function Shortcut
		input int32@1
		return char%0
	function Go
		input
		return int32%0
		# status status_t%0
		code 2
			PyEval_InitThreads();
			self->tstate = PyThreadState_New(PyThreadState_Get()->interp);
			mkDerivative(self, dcobj)
			dcobj->initPyThread(self->tstate);
			self->sysref = 1;
		input BInvoker*@1
	function ButtonAt
		input int32@1
		return BButton*%0
	function TextView
		return BTextView*%0
	function AlertPosition
		#  This is a static function ... Hm,
		input float@1,float@2
		return BPoint%0
